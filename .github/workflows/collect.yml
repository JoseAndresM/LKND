name: Collect new music jobs

on:
  schedule:
    # Ejecución cada 2 horas: 00:00, 02:00, 04:00 UTC...
    - cron: "0 */2 * * *"
  workflow_dispatch:

jobs:
  collect:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"   # ← más seguro para python-telegram-bot 13.x

      - name: Install dependencies
        run: pip install -r requirements.txt

      # 1) Scrape + clean (si falla, error)
      - name: Run pipeline (scrape & clean)
        run: |
          python -m collect.all
          python -m process.clean
            ###############################################
      # Paso de DEPURACIÓN – se puede borrar al final
      - name: Debug env
        env:
          TG_TOKEN  : ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: |
          echo "Variables TG_* visibles en este step:"
          env | grep TG_ || true
      ###############################################
      # 2) Notificación por Telegram (no debe tumbar el workflow si falta secret)
      - name: Notify Telegram
        env:
          TG_TOKEN  : ${{ secrets.TG_TOKEN }}
          TG_CHAT_ID: ${{ secrets.TG_CHAT_ID }}
        run: python -m notify.push
        continue-on-error: true        # ← evita que el job falle si falta secret

      # 3) Guarda la base SQLite como artefacto opcional
      - name: Upload DB artefact
        uses: actions/upload-artifact@v4
        with:
          name: jobs-sqlite
          path: jobs.db

